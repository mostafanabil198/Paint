/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eg.edu.alexu.csd.oop.draw.cs51_cs17;

import eg.edu.alexu.csd.oop.draw.DrawingEngine;
import eg.edu.alexu.csd.oop.draw.Shape;
import eg.edu.alexu.csd.oop.draw.cs51_cs17.shapes.Circle;
import eg.edu.alexu.csd.oop.draw.cs51_cs17.shapes.Rectangle;
import eg.edu.alexu.csd.oop.draw.cs51_cs17.shapes.Triangle;
import java.awt.Color;
import java.awt.Graphics;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author arabtech
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jButton1)
                .addGap(73, 73, 73)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 568, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(96, 96, 96)
                .addComponent(jButton4)
                .addGap(54, 54, 54))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(141, 141, 141))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton4)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jButton3)))
                .addContainerGap(615, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        d.undo();
        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed
    float x1, y1, x2, y2;
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
//        x1 = evt.getXOnScreen();
//        y1 = evt.getYOnScreen();
//         s = new Circle();
//        Map<String, Double> m = new HashMap<>();
//        m.put("width", Double.parseDouble(String.valueOf(0)));
//        m.put("height", Double.parseDouble(String.valueOf(0)));
//        m.put("centerX", Double.parseDouble(String.valueOf(x1)));
//        m.put("centerY", Double.parseDouble(String.valueOf(y1)));
//        m.put("shapeColor", Double.parseDouble(String.valueOf((Color.RED).getRGB())));
//        m.put("fillColor", Double.parseDouble(String.valueOf((Color.black).getRGB())));
//        s.setProperties(m);
//        d.addShape(s);

        x1 = evt.getXOnScreen();
        y1 = evt.getYOnScreen();
        s = new Triangle();
        Map<String, Double> m = new HashMap<>();
        m.put("point1X", Double.parseDouble(String.valueOf(x1)));
        m.put("point1Y", Double.parseDouble(String.valueOf(y1)));
        m.put("point2X", Double.parseDouble(String.valueOf(x1)));
        m.put("point2Y", Double.parseDouble(String.valueOf(y1)));
        m.put("point3X", Double.parseDouble(String.valueOf(x1)));
        m.put("point3Y", Double.parseDouble(String.valueOf(y1)));
        m.put("shapeColor", Double.parseDouble(String.valueOf((Color.RED).getRGB())));
        m.put("fillColor", Double.parseDouble(String.valueOf((Color.black).getRGB())));
        s.setProperties(m);
        d.addShape(s);


    }//GEN-LAST:event_formMousePressed
    Shape s;
    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
//        x2 = evt.getXOnScreen();
//        y2 = evt.getYOnScreen();
//        //s = new Rectangle();
//        Map<String, Double> m = new HashMap<>();
//        m.put("width", Double.parseDouble(String.valueOf(x2 - x1)));
//        m.put("height", Double.parseDouble(String.valueOf(x2 - x1)));
//        m.put("centerX", Double.parseDouble(String.valueOf(x1)));
//        m.put("centerY", Double.parseDouble(String.valueOf(y1)));
//        m.put("shapeColor", Double.parseDouble(String.valueOf((Color.RED).getRGB())));
//        m.put("fillColor", Double.parseDouble(String.valueOf((Color.black).getRGB())));
//        s.setProperties(m);
//        
        
//         x2 = evt.getXOnScreen();
//        y2 = evt.getYOnScreen();
//        float difX,difY;
//        difX = x2 - x1;
//        difY = y2 - y1;
//        //s = new Triangle();
//        Map<String, Double> m = new HashMap<>();
//        m.put("point1X", Double.parseDouble(String.valueOf(x1 + .5 * difX)));
//        m.put("point1Y", Double.parseDouble(String.valueOf(y1)));
//        m.put("point2X", Double.parseDouble(String.valueOf(x1)));
//        m.put("point2Y", Double.parseDouble(String.valueOf(y2)));
//        m.put("point3X", Double.parseDouble(String.valueOf(x2)));
//        m.put("point3Y", Double.parseDouble(String.valueOf(y2)));
//        m.put("shapeColor", Double.parseDouble(String.valueOf((Color.RED).getRGB())));
//        m.put("fillColor", Double.parseDouble(String.valueOf((Color.black).getRGB())));
//        s.setProperties(m);
//        repaint();
    }//GEN-LAST:event_formMouseReleased

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
//        x2 = evt.getXOnScreen();
//        y2 = evt.getYOnScreen();
//        // Shape s = new Rectangle();
//        Map<String, Double> m = new HashMap<>();
//        m.put("width", Double.parseDouble(String.valueOf(x2 - x1)));
//        m.put("height", Double.parseDouble(String.valueOf(x2 - x1)));
//        m.put("centerX", Double.parseDouble(String.valueOf(x1)));
//        m.put("centerY", Double.parseDouble(String.valueOf(y1)));
//        m.put("shapeColor", Double.parseDouble(String.valueOf((Color.RED).getRGB())));
//        m.put("fillColor", Double.parseDouble(String.valueOf((Color.black).getRGB())));
//        s.setProperties(m);
//
//        repaint();
        
          x2 = evt.getXOnScreen();
        y2 = evt.getYOnScreen();
        float difX,difY;
        difX = x2 - x1;
        difY = y2 - y1;
       // s = new Triangle();
        Map<String, Double> m = new HashMap<>();
        m.put("point1X", Double.parseDouble(String.valueOf(x1 + .5 * difX)));
        m.put("point1Y", Double.parseDouble(String.valueOf(y1)));
        m.put("point2X", Double.parseDouble(String.valueOf(x1)));
        m.put("point2Y", Double.parseDouble(String.valueOf(y2)));
        m.put("point3X", Double.parseDouble(String.valueOf(x2)));
        m.put("point3Y", Double.parseDouble(String.valueOf(y2)));
        m.put("shapeColor", Double.parseDouble(String.valueOf((Color.RED).getRGB())));
        m.put("fillColor", Double.parseDouble(String.valueOf((Color.black).getRGB())));
        s.setProperties(m);
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        d.redo();
        repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        d.save(jTextField1.getText());
        repaint();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        d.load(jTextField1.getText());
        repaint();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    DrawingEngine d = new DrawController();

    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.
        d.refresh(g);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
